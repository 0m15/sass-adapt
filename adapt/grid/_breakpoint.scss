@function new-breakpoint($query:$feature $value $columns, $total-columns: $grid-columns) {

  @if length($query) == 1 {
    $query: $default-feature nth($query, 1) $total-columns;
  }

  @else if length($query) == 2 or length($query) == 4 {
    $query: append($query, $total-columns);
  }


  @return $query;
}


@mixin container-breakpoint($query:$feature $value $columns, $total-columns: grid-columns) {
  @media screen and ($default-feature: nth($query, 2)) {
      @content;
      max-width: grid-column($total-columns);
    }
}

@mixin adapt-container($feature, $visible-columns, $total-columns: $visible-columns) {
  $value: grid-column($visible-columns);
  @media screen and ($feature: $value) {
    @content;
    $grid-columns: $total-columns;
    width: max-width();
  }
}

@mixin adapt-span($feature, $visible-columns, $span-column, $omega) {
  $value: grid-column($visible-columns);
  @media screen and ($feature: $value) {
    @content;
    width: grid-column($span-column);
    @if $omega {
      @include omega($omega);
    }
  }
}

@mixin __adapt-span($query: $feature $visible-columns $span-column-size, $omega) {
  $value: grid-column($visible-columns);
  
  @if length($query == 1) {
    @media screen and ($feature: $value) {
      @content;
      width: grid-column($span-column-size);
      @if $omega {
        @include omega($omega);
      }
    }    
  }

  @else if lenght($query == 2) {
    @media screen and ($feature: $value) {
      @content;
      width: grid-column($span-column-size);
      @if $omega {
        @include omega($omega);
      }
    } 
  }


}