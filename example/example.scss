
@import 'adapt/adapt';

$desktop: grid-column(24) + 1;
$small-desktop: grid-column(18) + 1;
$tablet: grid-column(16) + 1;
$mobile: grid-column(12) - 2;
$handeld: grid-column(6) - 1;

/* some base styling for demo */
body {
	color: #444;
	font-family: 'Helvetica';
}

pre,
code {
	font-family: 'Monospace';
	font-size: .85em;
}

.container {
	
}

.row > .span,
.row > .s3,
.row > .s9,
.row > .s6 {
	background: rgba(50, 255, 255, .15);
	padding: 20px;
	margin-bottom: 20px;
}

.row > .s3 {
	margin-bottom: 0;
	width: 100px;
}

.row > .row.span {
	padding: 0;
}

.container {
	@include container();
	
	@include adapt-container(min-width, 6) {
		background: #222;
	}

	@include adapt-container(min-width, 12) {
		background: #444;
	}

	@include adapt-container(min-width, 18) {
		background: #999;
	}

	@include adapt-container(min-width, 24) {
		background: #777;
	}
	
}

.row {
	@include row();
}

.row .span {
	@include span-column(6);
	@include adapt-span(max-width, 12, 6, 3n);
	@include adapt-span(max-width, 24, 6, 4n);
}

.row > .s3 {
	@include span-column(3);
	@include omega(2n);
}

.row .s6 {
	@include span-column(6);
}

.row .s1 {
	@include span-column(1);
	background: rgba(0, 0, 0, .1);
}

.row .s9 {
	@include span-column(9);
	
	@media screen and (min-width: $handeld) and (max-width: $mobile) {
		@include span-column(6)
	}

	@media screen and (min-width: $mobile) and (max-width: $small-desktop) {
		@include span-column(12)
	}

	@media screen and (min-width: $small-desktop) and (max-width: $desktop) {
		
	}
	
	@media screen and (min-width: $desktop) {
	}
}

.row .s6 {
	@include omega(3n);
}

/* compose the grid */
@for $column from 1 to 25 {
	.span-#{$column} {
		@include span-column($column);
	}
}